from smbus2 import SMBusWrapper
import numpy as np

class DoF:
    WHO_AM_I_M = 0x0F

    MAG_CTRL_1 = 0x20
    MAG_CTRL_2 = 0x21
    MAG_CTRL_3 = 0x22
    MAG_CTRL_4 = 0x23
    MAG_CTRL_5 = 0x24

    STATUS = 0x27

    MAG_OUT_XL = 0x28
    MAG_OUT_XH = 0x29
    MAG_OUT_YL = 0x2A
    MAG_OUT_YH = 0x2B
    MAG_OUT_ZL = 0x2C
    MAG_OUT_ZH = 0x2D

    CAL_M_4G = 4.0/32768.0
    SNS_M_4G = 0.00014

    DEC_BO = -8.58



    def __init__(self,address):
        self.id = address
        self.heading = -1

        with SMBusWrapper(1) as bus:
            iam = bus.read_byte_data(self.id, WHO_AM_I_M)

        if iam = WHO_AM_I_M:
            print("Succesfully connected to magnetometer.")
        else:
            print("Failed to connect.")

    def getHeading():
        magRead()

        if y == 0:
            if x < 0:
                heading = np.pi
            else:
                heading = 0
        else:
            heading = np.arctan(x,y)

        heading -= DEC_BO * np.pi

        if heading > np.pi:
          heading -= (2 * np.pi)

        elif heading < -np.pi:
            heading += (2 * np.pi)

        heading *= 180.0 / np.pi

        return heading


    def parse(data):
        x = ord(data[0] | (data[1] << 8))*CAL_M_4G
        y = ord(data[2] | (data[3] << 8))*CAL_M_4G
        z = ord(data[4] | (data[5] << 8))*CAL_M_4G

        return x, y , z

    def magRead():

        with SMBusWrapper(1) as bus:
            data = bus.read_i2c_block_data(id,MAG_OUT_XL,6)

        self.x,self.y,self.z = parse(data)


    # def magCalib(self):
    #     with SMBusWrapper(1) as bus:
