from Adafruit_MotorHAT import Adafruit_MotorHAT as MH
from Adafruit_MotorHAT import Adafruit_DCMotor, Adafruit_StepperMotor
import time
import threading

def move(stepper,steps,dir,style):
    stepper.step(steps,dir,style)

class Motor:
    def __init__(self,port):
        self.motor = MH()

        self.stepper1 = self.motor.getStepper(200,1) #Port 1 is Left
        self.stepper2 = self.motor.getStepper(200,2) #Port 2 is right
        self.stepper1.setSpeed(30)
        self.stepper2.setSpeed(30)

        self.thread1 = threading.Thread()
        self.thread2 = threading.Thread()

    def disconnect(self): #Run this at the end to release the motors.
        self.motor.getMotor(1).run(MH.RELEASE)
        self.motor.getMotor(2).run(MH.RELEASE)

    def speed(speed):
        self.stepper1.setSpeed(speed)
        self.stepper2.setSpeed(speed)

    def forward(self,style):
        if not self.thread1.isAlive():
            stepper = self.stepper1
            steps = 100
            dir = MH.FORWARD
            style = MH.SINGLE

            thread1 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread1.start()

        if not self.thread2.isAlive():
            stepper = self.stepper2
            steps = 100
            dir = MH.FORWARD
            style = MH.SINGLE

            thread2 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread2.start()

    def backward(self,style):
        if not self.thread1.isAlive():
            stepper = self.stepper1
            steps = 100
            dir = MH.BACKWARD
            style = MH.SINGLE

            thread1 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread1.start()

        if not self.thread2.isAlive():
            stepper = self.stepper2
            steps = 100
            dir = MH.BACKWARD
            style = MH.SINGLE

            thread2 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread2.start()

    def leftPivot():
        if not self.thread1.isAlive():
            stepper = self.stepper1
            steps = 10
            dir = MH.BACKWARD
            style = MH.SINGLE

            thread1 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread1.start()

        if not self.thread2.isAlive():
            stepper = self.stepper2
            steps = 10
            dir = MH.FORWARD
            style = MH.SINGLE

            thread2 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread2.start()

    def rightPivot():
        if not self.thread1.isAlive():
            stepper = self.stepper1
            steps = 10
            dir = MH.FORWARD
            style = MH.SINGLE

            thread1 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread1.start()

        if not self.thread2.isAlive():
            stepper = self.stepper2
            steps = 10
            dir = MH.BACKWARD
            style = MH.SINGLE

            thread2 = threading.Thread(target=move,args=(stepper,steps,dir,style))
            thread2.start()
